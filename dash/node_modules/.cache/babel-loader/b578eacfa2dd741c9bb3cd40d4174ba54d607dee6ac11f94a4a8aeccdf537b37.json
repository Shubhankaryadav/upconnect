{"ast":null,"code":"// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * Get unique property values from an array.\n * @param {Array} arr Array of data.\n * @param {string} propertyName Prop name.\n * @returns {Array} Array of unique values.\n */\nexport function getUniquePropertyValues(arr, accessor) {\n  var setOfValues = new Set(arr.map(accessor));\n  return Array.from(setOfValues);\n}\n/**\n * Add zero to the domain.\n * @param {Array} arr Add zero to the domain.\n * @param {Number} value Add zero to domain.\n * @returns {Array} Adjusted domain.\n */\n\nexport function addValueToArray(arr, value) {\n  var result = [].concat(arr);\n  if (result[0] > value) {\n    result[0] = value;\n  }\n  if (result[result.length - 1] < value) {\n    result[result.length - 1] = value;\n  }\n  return result;\n}\n/**\n * Transforms a value ( number or date ) to a string.\n * @param {Date | number} value The value as date or number.\n * @returns {string | number} The value as string.\n */\n\nexport function transformValueToString(value) {\n  return Object.prototype.toString.call(value) === '[object Date]' ? value.toDateString() : value;\n}","map":{"version":3,"names":["getUniquePropertyValues","arr","accessor","setOfValues","Set","map","Array","from","addValueToArray","value","result","concat","length","transformValueToString","Object","prototype","toString","call","toDateString"],"sources":["C:/Users/shubh/VS Code/Reward Dashboard Page/admin-dashboard/node_modules/react-vis/es/utils/data-utils.js"],"sourcesContent":["// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * Get unique property values from an array.\n * @param {Array} arr Array of data.\n * @param {string} propertyName Prop name.\n * @returns {Array} Array of unique values.\n */\nexport function getUniquePropertyValues(arr, accessor) {\n  var setOfValues = new Set(arr.map(accessor));\n  return Array.from(setOfValues);\n}\n/**\n * Add zero to the domain.\n * @param {Array} arr Add zero to the domain.\n * @param {Number} value Add zero to domain.\n * @returns {Array} Adjusted domain.\n */\n\nexport function addValueToArray(arr, value) {\n  var result = [].concat(arr);\n\n  if (result[0] > value) {\n    result[0] = value;\n  }\n\n  if (result[result.length - 1] < value) {\n    result[result.length - 1] = value;\n  }\n\n  return result;\n}\n/**\n * Transforms a value ( number or date ) to a string.\n * @param {Date | number} value The value as date or number.\n * @returns {string | number} The value as string.\n */\n\nexport function transformValueToString(value) {\n  return Object.prototype.toString.call(value) === '[object Date]' ? value.toDateString() : value;\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,uBAAuBA,CAACC,GAAG,EAAEC,QAAQ,EAAE;EACrD,IAAIC,WAAW,GAAG,IAAIC,GAAG,CAACH,GAAG,CAACI,GAAG,CAACH,QAAQ,CAAC,CAAC;EAC5C,OAAOI,KAAK,CAACC,IAAI,CAACJ,WAAW,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASK,eAAeA,CAACP,GAAG,EAAEQ,KAAK,EAAE;EAC1C,IAAIC,MAAM,GAAG,EAAE,CAACC,MAAM,CAACV,GAAG,CAAC;EAE3B,IAAIS,MAAM,CAAC,CAAC,CAAC,GAAGD,KAAK,EAAE;IACrBC,MAAM,CAAC,CAAC,CAAC,GAAGD,KAAK;EACnB;EAEA,IAAIC,MAAM,CAACA,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC,GAAGH,KAAK,EAAE;IACrCC,MAAM,CAACA,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC,GAAGH,KAAK;EACnC;EAEA,OAAOC,MAAM;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASG,sBAAsBA,CAACJ,KAAK,EAAE;EAC5C,OAAOK,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACR,KAAK,CAAC,KAAK,eAAe,GAAGA,KAAK,CAACS,YAAY,CAAC,CAAC,GAAGT,KAAK;AACjG"},"metadata":{},"sourceType":"module","externalDependencies":[]}